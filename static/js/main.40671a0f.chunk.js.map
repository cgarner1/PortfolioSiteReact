{"version":3,"sources":["Components/Navbar.js","Components/TripleItemGrid.js","Components/PageHeader.js","Components/Project.js","Components/ProjectsPage.js","Components/SchoolInfo.js","Components/ExpiriencePage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","title","children","NavItem","to","link","text","TripleItemGrid","item1","item2","item3","HeaderText","Project","src","process","img","name","date","ProjectsPage","id","href","target","SchoolInfo","imgsrc","major","ExpiriencePage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40671a0f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nexport function Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item-title\">{props.title}</li>\r\n                <div className=\"nav-link-container\">{props.children}</div>\r\n            </ul>\r\n        </nav>\r\n        );\r\n}\r\n\r\nexport function NavItem(props) {\r\n    return (\r\n        <li className = \"nav-item\">\r\n            <NavLink to={props.link} className=\"nav-item-link\">{props.text}</NavLink>\r\n        </li>\r\n        );\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {HashLink as Link} from \"react-router-hash-link\"\r\n\r\nexport function TripleItemGrid(props) {\r\n\treturn (\r\n\t\t<div className=\"triple-row-grid\">\r\n\t\t\t<Link to=\"/#SWE\"><div className=\"triple-row-item\">{props.item1}</div></Link>\r\n\t\t\t<Link to=\"/#ML\"><div className=\"triple-row-item\">{props.item2}</div></Link>\r\n\t\t\t<Link to=\"/#GD\"><div className=\"triple-row-item\">{props.item3}</div></Link>\r\n\t\t</div>\r\n\t\t);\r\n\r\n}","import React from \"react\"\r\nimport { TripleItemGrid } from \"./TripleItemGrid\"\r\n\r\nexport function HeaderText(props) {\r\n    // props.title -> title of page\r\n    // props.children -> data in text field\r\n    return (\r\n        <div className=\"header-grid\">\r\n            <div className=\"header-title-container\">\r\n                <h1 className=\"header-text\">{props.title}</h1>\r\n            </div>\r\n            <div className=\"header-body-container\">\r\n                <div></div> \r\n                <p className=\"intro-para\">{props.children}</p>\r\n                <div></div>\r\n            </div>\r\n            <TripleItemGrid item1=\"Software Engineering\" item2=\"Machine Learning\" item3=\"Game Development\"></TripleItemGrid>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react'\r\n\r\n\r\nexport function Project(props) {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"project-info-container\">\r\n                <div className=\"project-content\">\r\n                    <div className=\"project-img-container\"><img className=\"proj-img\" src={process.env.PUBLIC_URL + props.img}></img></div>\r\n                    <div className=\"proj-text-container\">\r\n                        <h3>{props.name}</h3>\r\n                        <h3 className=\"project-date\">{props.date}</h3>\r\n                        <p>{props.children}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        );\r\n\r\n\r\n}","import React from 'react';\r\nimport { Navbar, NavItem } from \"./Navbar\"\r\nimport { HeaderText } from \"./PageHeader\"\r\nimport { Project } from \"./Project\"\r\n\r\nexport function ProjectsPage() {\r\n    return (\r\n        <div className=\"page-content\">\r\n            \r\n            <div className=\"main-content\">\r\n                <div className=\"negative-left\"></div>\r\n                <div className=\"middle-grid\">\r\n\r\n\r\n\r\n                    {/* MAIN CONTENT*/}\r\n                    <section id=\"home-content\">\r\n                        <div className=\"viewport-entry\">\r\n                            <HeaderText title=\"PROJECTS\">\r\n                                Continued learning requires constantly building meaningful projects inside and outside the workplace. Throughout my journey in the Computer Science field,\r\n                                I have built, and continue to build multiple projects within the Software Engineering, Machine Learning, and Game Development space. Click on one of the links below to learn more.\r\n                          </HeaderText>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/* SWE */}\r\n                    <section id=\"SWE\"><h2>Software Engineering</h2></section>\r\n                    <Project name=\"ML Models to XLSX\" date=\"Professional - 2019\" img=\"/images/xlsx.png\">\r\n                        Built and tested an internal API used to automatically extract performance data from trained machine learning models,\r\n                        and organize that data elegantly in xlsx files, and JSON files to be consumed by other services.\r\n                  </Project>\r\n\r\n                    <Project name=\"Full-Stack .Net Core Demo\" date=\"Personal - 2020\" img=\"/images/ASPDemo.png\">\r\n                        Learned the ins and outs of full-stack development using .Net Core MVC, Entity Framework, and Bootstrap to build/deploy a web application with data persistence, user authentication,\r\n                        and asynchronous API calls using RESTful conventions.\r\n                  </Project>\r\n\r\n                    <Project name=\"Headphone Finder Site\" date=\"Personal - 2020\" img=\"/images/Site_Showoff.gif\">\r\n                        Designed and implemented a dynamic front-end for a website designed to find optimal prices on headphones. The user expirience was designed to be easy to navigate,\r\n                        yet visibly pleasing.\r\n                  </Project>\r\n\r\n                    {/* ML */}\r\n                    <section id=\"ML\"><h2>Machine Learning</h2></section>\r\n                    <Project name=\"Deep Learning Environment\" date=\"Personal - 2019\" img=\"/images/deep-q.gif\">\r\n                        Developed an AI environment from scratch designed to train reinforcement learning algorithms (Neural Networks, Genetic Algorithms, etc). The environment was based on\r\n                      <a href=\"https://gym.openai.com/\" target=\"_blank\"> OpenAI's Gym API.</a>  Designed a custom Deep-Q algorithm that then learned and mastered the environment.\r\n                  </Project>\r\n\r\n                    <Project name=\"Neural Network CLI App\" date=\"Personal - 2019\" img=\"/images/cmd_app_code.png\">\r\n                        Developed easy-to-use command line application designed to quickly choose, train, and implement multiple Convolutional Neural Networks using PyTorch and Python's\r\n                        CLI tools.\r\n                  </Project>\r\n\r\n                    {/* Game Dev */}\r\n                    <section id=\"GD\"><h2>Game Development</h2></section>\r\n                    <Project name=\"Triangle Rush\" date=\"Personal - 2020\" img=\"/images/trirush.png\">\r\n                        Collaborated with Elon University students to build a 2D shoot-em-up in Unity. Triangle Rush featured physics-based movement, the ability to grab and shoot back items\r\n                        in the game world, mutliple enemy types, and power-ups.\r\n                  </Project>\r\n\r\n                    <Project name=\"Unannounced Indie Project\" date=\"Personal - 2020\" img=\"/images/empty-image.jpg\">\r\n                        Currently building a larger scale indie project in Unity. More details in the future!\r\n                  </Project>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"negative-right\"></div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n        );\r\n}","import React from \"react\"\r\n\r\nexport default function SchoolInfo(props) {\r\n    return (\r\n        <div className=\"school-info-container\">\r\n            <img className=\"school-icon\" src={process.env.PUBLIC_URL + props.imgsrc}></img>\r\n            <h2>{props.name}</h2>\r\n            <h3>Major: {props.major}</h3>\r\n            <h3>{props.date}</h3>\r\n            <p>{props.children}</p>\r\n        </div>\r\n        )\r\n}","import React from 'react';\r\nimport { Navbar, NavItem } from \"./Navbar\"\r\nimport School from \"./SchoolInfo\"\r\n\r\n\r\nexport function ExpiriencePage() {\r\n    return (\r\n        <div className=\"page-content\">\r\n            <div className=\"main-content\">\r\n                <div className=\"negative-left\"></div>\r\n                <div className=\"middle-grid\">\r\n                    <section id=\"home-content\">\r\n                        <div className=\"viewport-entry\">\r\n\r\n                            {/* VIEWPORT ENTRY*/}\r\n                            <div className=\"header-title-container\">\r\n                                <h1 className=\"header-text\">EDUCATION</h1>\r\n                            </div>\r\n                            <School imgsrc=\"/images/CMU.jpg\" major=\"Masters of Software Engineering\" date=\"Jun 2020 - Dec 2021\" name=\"Carnegie Mellon University\">\r\n                                I am currently attending CMU's Master of Software Engineering - Scalable Systems program. Over the next year and a half, I will be taking courses\r\n                                ranging from Software Architecture, Data Intensive Systems, Distributed Systems and many more, coupled with a 14 week practicum, where our abilities are tested\r\n                                to build real world, business ready solutions to be integrated into large-scale company systems. \r\n                            </School>\r\n                            <School imgsrc=\"/images/elon.jpg\" major=\"B.S. Computer Science\" date=\"Sep 2016 - May 2020\" name=\"Elon University\">\r\n                                Over the four years of my Elon University expirience, I was provided ample opportunities to refine my knowledge and ability in the area of\r\n                                Computer Science. Meaningful electives in courses such as Machine Learning and Web Development allowed me to further my immediate technical skills,\r\n                                while leadership oppurtunities such as the founding of Computer Science Club (and taking the role of Vice President of said organization) gave me\r\n                                significant time to hone my skills in networking, managment, and leadership.\r\n                            </School>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n        );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { ProjectsPage } from \"./Components/ProjectsPage\"\r\nimport { ExpiriencePage } from \"./Components/ExpiriencePage\"\r\nimport { HashRouter, Route, Router, Link, IndexRoute, BrowserRouter } from \"react-router-dom\"\r\nimport {Navbar, NavItem } from \"./Components/Navbar\"\r\n\r\n\r\nfunction App() { \r\n  return (\r\n      <div className=\"app\">\r\n      \r\n          <HashRouter>\r\n              <Navbar title=\"Christopher Garner\">\r\n                  <NavItem text=\"Projects\" link=\"/\"></NavItem>\r\n                  <NavItem text=\"Education\" link=\"/education\"></NavItem>\r\n                  \r\n                  \r\n              </Navbar>\r\n          <Route exact path={\"/\"} component={ProjectsPage}></Route>\r\n          <Route exact path={\"/education\"} component={ExpiriencePage}></Route>\r\n          </HashRouter>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}